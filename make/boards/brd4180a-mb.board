# Define a board.
#
# A board describes a PCB with a microcontroller and peripherals (flash,
# LEDs, sensors etc) which are used by this firmware build.

# This is the EFR32MG21 (Series 2) radio board BRD4180A

# Determine board name and location (must be done before including any other files)
BOARD_NAME          := brd4180a
BOARD_MAKE_DIR      := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))
MAINBOARD_NAME      := brd4001a

# Set board default rfpower before including default from arch
DEFAULT_RFPOWER_DBM ?= 10

# Include the architecture definition
$(call includeArch,efr32xg2x)

MCU_PART            := EFR32MG21A020F1024IM32
MCU_ARCH            := efr32xg2x
MCU_FAMILY          := efr32xg21

# Board options for compiler and linker, libraries
CFLAGS      += -D$(MCU_PART)
LDFLAGS     += -Wl,-T,$(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32MG21/Source/GCC/efr32mg21.ld
LDLIBS      += $(SILABS_SDKDIR)/platform/radio/rail_lib/autogen/librail_release/librail_efr32xg21_gcc_release.a

# Always enable the mainboards virtual UART
CFLAGS      += -DRETARGET_VCOM

INCLUDES    +=  \
    -I$(SILABS_SDKDIR)/platform/radio/rail_lib/chip/efr32/efr32xg2x  \
    -I$(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32MG21/Include \
    -I$(SILABS_SDKDIR)/platform/CMSIS/Include

SOURCES     += \
    $(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32MG21/Source/GCC/startup_efr32mg21.c \
    $(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32MG21/Source/system_efr32mg21.c

FREERTOS_PORT_INC = -I$(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure

FREERTOS_PORT_SRC = $(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure/port.c \
                    $(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure/portasm.c \
                    $(FREERTOS_DIR)/portable/MemMang/heap_5.c

CFLAGS += -DRADIO_INTERRUPT_PRIORITY=5
CFLAGS += -DLDMA_INTERRUPT_PRIORITY=5

# Use the HP PA
CFLAGS += -DDEFAULT_RAIL_TX_POWER_MODE="'H'"

# Pull in the board support code
BOARD_SRC_DIR       := $(BOARD_MAKE_DIR)/../../src/boards/$(BOARD_NAME)
MAINBOARD_SRC_DIR   := $(BOARD_MAKE_DIR)/../../src/boards/$(MAINBOARD_NAME)
INCLUDES            += -I$(BOARD_SRC_DIR) -I$(MAINBOARD_SRC_DIR)
SOURCES             += $(BOARD_SRC_DIR)/platform.c

# retargetserialconfig.h and bsp.h and bsphalconfig.h, hal-config-board.h?
INCLUDES    += -I$(SILABS_SDKDIR)/hardware/kit/EFR32MG21_BRD4180A/config \
               -I$(SILABS_SDKDIR)/hardware/kit/common/bsp \
               -I$(SILABS_SDKDIR)/hardware/kit/common/halconfig

# Pull in the platform_io.c
ifndef NODE_PLATFORM_DIR
$(error NODE_PLATFORM_DIR has not been defined!)
endif
SOURCES             += $(NODE_PLATFORM_DIR)/silabs/platform_io.c

# Pull in default OS configuration, after possible platform-specific overrides
ifneq ($(CMSIS_CONFIG_DIR),)
INCLUDES            += -I$(CMSIS_CONFIG_DIR)
endif

# Allocate UUID for this board
# NB! UNIQUE: MUST NOT BE USED IN OTHER BOARDS.
# NB! CONST: CANNOT BE CHANGED FOR THIS BOARD.
UUID_BOARD          := d01e82bb-dc4d-4059-be25-62d86ed5a906

# Maximum size limits for binaries in memory, their start addresses
BOOTLOADER_START    := 0x00000
BOOTLOADER_MAX_LEN  := 0x14000 # 64K+32K
STAGE1_START        := 0x00000
STAGE1_MAX_LEN      := 0x10000 # 64K
STAGE2_START        := 0x10000
STAGE2_MAX_LEN      := 0x08000 # 32K
APP_START           ?= 0x18000 #
APP_MAX_LEN         ?= 0xE0000 # 896K
                               # 32K Reserved

$(call passVarToCpp,CFLAGS,BOOTLOADER_START)
$(call passVarToCpp,CFLAGS,BOOTLOADER_MAX_LEN)
$(call passVarToCpp,CFLAGS,APP_START)
$(call passVarToCpp,CFLAGS,APP_MAX_LEN)
