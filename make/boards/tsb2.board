# Define a board.
#
# A board describes a PCB with a microcontroller and peripherals (flash,
# LEDs, sensors etc) which are used by this firmware build.

# This is the TestSystemBoard2 tsb2

# Determine board name and location (must be done before including any other files)
BOARD_NAME          := $(notdir $(basename $(lastword $(MAKEFILE_LIST))))
BOARD_MAKE_DIR      := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))

# Set board default rfpower before including default from arch
DEFAULT_RFPOWER_DBM ?= 17

# Include the architecture definition
$(call includeArch,efr32xg2x)

MCU_PART            := EFR32BG21A020F1024IM32
MCU_ARCH            := efr32xg2x
MCU_FAMILY          := efr32xg21

# Board options for compiler and linker, libraries
CFLAGS      += -D$(MCU_PART)
LDFLAGS     += -Wl,-T,$(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32BG21/Source/GCC/efr32bg21.ld
LDLIBS      += $(SILABS_SDKDIR)/platform/radio/rail_lib/autogen/librail_release/librail_efr32xg21_gcc_release.a

INCLUDES    +=  \
    -I$(SILABS_SDKDIR)/platform/radio/rail_lib/chip/efr32/efr32xg2x  \
    -I$(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32BG21/Include \
    -I$(SILABS_SDKDIR)/platform/CMSIS/Include

SOURCES     += \
    $(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32BG21/Source/GCC/startup_efr32bg21.c \
    $(SILABS_SDKDIR)/platform/Device/SiliconLabs/EFR32BG21/Source/system_efr32bg21.c

FREERTOS_PORT_INC = -I$(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure

FREERTOS_PORT_SRC = $(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure/port.c \
                    $(FREERTOS_DIR)/portable/GCC/ARM_CM33_NTZ/non_secure/portasm.c \
                    $(FREERTOS_DIR)/portable/MemMang/heap_5.c

CFLAGS += -DRADIO_INTERRUPT_PRIORITY=5
CFLAGS += -DLDMA_INTERRUPT_PRIORITY=5
CFLAGS += -DEMDRV_DMADRV_DMA_IRQ_PRIORITY=5

# Use the 0dBm PA
DEFAULT_RAIL_TX_POWER_MODE ?= "'L'"
CFLAGS += -DDEFAULT_RAIL_TX_POWER_MODE=$(DEFAULT_RAIL_TX_POWER_MODE)

# Actual antenna path is IO2, but testsystem uses IO1 to intentionally detune
# CFLAGS += -DDEFAULT_ANTENNA_PATH_IO2

# IRQ Handler priority
CFLAGS += -DSERIAL_HDLC_IRQ_PRIORITY=5

# Pull in the board support code
BOARD_SRC_DIR       := $(BOARD_MAKE_DIR)/../../src/boards/$(BOARD_NAME)
INCLUDES            += -I$(BOARD_SRC_DIR)
SOURCES             += $(BOARD_SRC_DIR)/platform.c

# Pull in the platform_io.c
ifndef NODE_PLATFORM_DIR
$(error NODE_PLATFORM_DIR has not been defined!)
endif
SOURCES             += $(NODE_PLATFORM_DIR)/silabs/platform_io.c

# Pull in default OS configuration, after possible platform-specific overrides
ifneq ($(CMSIS_CONFIG_DIR),)
INCLUDES            += -I$(CMSIS_CONFIG_DIR)
endif

# Allocate UUID for this board
# NB! UNIQUE: MUST NOT BE USED IN OTHER BOARDS.
# NB! CONST: CANNOT BE CHANGED FOR THIS BOARD.
UUID_BOARD          := c359a127-46a0-47f2-b827-2c21e284bd59

# Maximum size limits for binaries in memory, their start addresses
BOOTLOADER_START    := 0x00000
BOOTLOADER_MAX_LEN  := 0x20000
STAGE1_START        := 0x00000
STAGE1_MAX_LEN      := 0x10000
STAGE2_START        := 0x10000
STAGE2_MAX_LEN      := 0x10000
APP_START           ?= 0x20000
APP_MAX_LEN         := 0xDE000

$(call passVarToCpp,CFLAGS,BOOTLOADER_START)
$(call passVarToCpp,CFLAGS,BOOTLOADER_MAX_LEN)
$(call passVarToCpp,CFLAGS,APP_START)
$(call passVarToCpp,CFLAGS,APP_MAX_LEN)

# Define peripherals
MCU_FLASH_PAGE_SIZE := 8192
$(call passVarToCpp,CFLAGS,MCU_FLASH_PAGE_SIZE)
